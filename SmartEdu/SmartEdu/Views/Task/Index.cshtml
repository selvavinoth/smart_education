@model  SmartEdu.ViewModel.TaskViewModel
@using SmartEdu.Helper
@{
    ViewBag.Title = "Index";
}
@{
    Layout = null;        
}
@Html.Partial("_Scripts")
@Html.Partial("_GridScript")
<div id="pageMainDiv" align="center" style="padding-top: 50px;">
    <table cellpadding="0" cellspacing="0" border="0" style="width: 600px;">
        <tr>
            <td class="gridAction">
                <table cellpadding="0" cellspacing="0" border="0">
                    <tr>
                        <td class="AddIcon">
                            <label onclick="fnAdd();">
                                @ResourceKeeper.GetResource("CMN_Add")
                            </label>
                        </td>
                        <td class="EditIcon">
                            <label onclick="fnEdit('0',false);">
                                @ResourceKeeper.GetResource("CMN_Edit")
                            </label>
                        </td>
                        <td class="DeleteIcon">
                            <label onclick="fnDelete();">
                                @ResourceKeeper.GetResource("CMN_Delete")
                            </label>
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td>
                <div id="gridbox" class="gridBox" style="width: 100%; overflow: auto;">
                </div>
            </td>
        </tr>
    </table>
</div>
<div id="contentWrapper" class="pageDimmer" style="display: none;">
</div>
<div id="popupBox" class="popup_Cotainer" style="display: none;" align="center">
    <table class="popup_Table">
        <tr>
            <td align="center" valign="middle">
                <div class="popupBox">
                    <table cellpadding="0" cellspacing="0" border="0" class="popupBoxTable">
                        <tr>
                            <td class="popupHeader">
                                <div class="popupHead" id="popUpHeader">
                                    @ResourceKeeper.GetResource("APP_Task")</div>
                                <div class="closeIcon" onclick="fnShowhidePopUp('none');">
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <td id="popupContent" style="height: 220px;" valign="middle" align="center">
                                @using (Html.BeginForm("RoleIUAction", "Role", FormMethod.Post, new { id = "TaskForm" }))
                                {
                                    @Html.ValidationSummary(true)
                                    <table border="0" cellspacing="0" cellpadding="0" style="width: 100%;">
                                        <tr>
                                            <td class="td_label">
                                                <label>
                                                    @ResourceKeeper.GetResource("APP_TaskName")
                                                </label>
                                            </td>
                                            <td class="td_text">
                                                @Html.EditorFor(model => model.ST_Task_Name)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">
                                                @Html.ValidationMessageFor(model => model.ST_Task_Name)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="td_label">
                                                <label>
                                                    @ResourceKeeper.GetResource("APP_Url")
                                                </label>
                                            </td>
                                            <td class="td_text">
                                                @Html.EditorFor(model => model.ST_URL)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">
                                                @Html.ValidationMessageFor(model => model.ST_URL)
                                            </td>
                                        </tr>
                                        <tr>
                                            <td>@Html.HiddenFor(model => model.ST_Id)
                                            </td>
                                            <td>@Html.HiddenFor(model => model.ReleaseMemory)
                                            </td>
                                        </tr>
                                    </table>
                                }
                            </td>
                        </tr>
                        <tr>
                            <td align="center">
                                <input type="button" value="save" onclick="fnSave();" />
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
    </table>
</div>
<script type="text/javascript">
    /* Methods used for initialization && grid loading*/
    var mygrid;
    $(function(){ fnSetPageSize(); init(); fnLoadGrid(); });
    function init() {
        mygrid = new dhtmlXGridObject('gridbox');
        mygrid.setImagePath("@Url.Content("~/Content/GridData/imgs/")"); //path to images required by grid
        mygrid.setHeader('@ResourceKeeper.GetResource("APP_TaskName"),@ResourceKeeper.GetResource("APP_Url")'); //set column names
        mygrid.setInitWidths("*,*"); //set column width in px
        mygrid.setColAlign("left,left"); //set column values align
        mygrid.setColTypes("ro,ro"); //set column types
        mygrid.setColSorting("str,str"); //set sorting
        mygrid.attachHeader("#text_filter,#text_filter");
        mygrid.init(); //initialize grid
        mygrid.attachEvent("onRowDblClicked",function(rId,cInd){fnEdit(rId,true);});
    }
    function fnSetPageSize(){ $("#gridbox").height(String(parent.ContentHeight()-150)+"px"); $("#pageMainDiv").height(String(parent.ContentHeight()-50)+"px"); }
    function fnLoadGrid(){
        $.ajax({
            url:'@Url.Content("~/Task/GetGridData")',
            type:"POST",
            dataType:"Json",
            data:{},
            success:function(obj){
                if(obj && obj!=null){ mygrid.clearAll(); mygrid.parse(obj,"json"); }
            },
            error:function(a,b){}
        });
    }
    /* End of initialization */
</script>
<script type="text/javascript">
    /* Methhod used for Add && edit */
    function fnAdd() { fnClearContent(); $("#popUpHeader").html('@ResourceKeeper.GetResource("CMN_Add")'); fnShowhidePopUp(""); }
    function fnEdit(id,flag){
        if(!flag){id=mygrid.getSelectedId();}
        if(id==null || id==""){ alert('@ResourceKeeper.GetResource("CMN_Need_Selection")'); return false;}
        fnShowhidePopUp("");
        $("#popUpHeader").html('@ResourceKeeper.GetResource("CMN_Edit")');
        fnFillEditData();
    }
    function fnFillEditData(){
        $("#ST_Id").val(mygrid.getSelectedRowId());
        $("#ST_Task_Name").val(mygrid.cells(mygrid.getSelectedRowId(),0).getValue());
        $("#ST_URL").val(mygrid.cells(mygrid.getSelectedRowId(),1).getValue());
    }
    function fnSave(){
        if(!$("#TaskForm").valid()){ return false;}
        $.ajax({
            url:'@Url.Content("~/Task/TaskIUAction")',
            type:"POST",
            contentType:"application/Json",
            dataType:"JSON",
            data:JSON.stringify(fnGetViewModel()),
            success:function(obj){
               if(obj && obj!=null){
                    if(obj.Status){
                        if(obj.data && obj.data!=null){mygrid.clearAll();mygrid.parse(obj.data,"json");}
                        if(obj.isUpdate){ fnShowhidePopUp("none");}
                        else{fnClearContent();}
                    }
                    if(obj.Msg && obj.Msg!=""){alert(obj.Msg);}
                } 
            },
            error:function(a,b){}
        });
    }
    function fnGetViewModel(){
        var TaskViewModel={};
        TaskViewModel.ST_Id=$("#ST_Id").val();
        TaskViewModel.ST_Task_Name=$("#ST_Task_Name").val();
        TaskViewModel.ST_URL=$("#ST_URL").val();
        return TaskViewModel;
    }
    /* End of Add && edit */

</script>
<script type="text/javascript">

    /* Methhod used for Delete */
    function fnDelete() {
        var id = mygrid.getSelectedId();
        if (id == null || id == "") { alert('@ResourceKeeper.GetResource("CMN_Need_Selection")'); return false; }
        $.ajax({
            url: '@Url.Content("~/Task/Delete")',
            type: "POST",
            dataType: "Json",
            data: { "id": id },
            success: function (obj) {
                if (obj && obj != null) {
                    if (obj.data && obj.data != null) { mygrid.clearAll(); mygrid.parse(obj.data, "json"); }
                    if (obj.Msg && obj.Msg != "") { alert(obj.Msg); }
                }
            },
            error: function (a, b) { }
        });
    }
    /* End of Delete */

    /* Common methods */
    function fnShowhidePopUp(val) { $("#contentWrapper").css("display", val); $("#popupBox").css("display", val); }
    function fnClearContent() { $("#ST_Id").val("0"); $("#ST_Task_Name").val(""); $("#ST_URL").val(""); }
    /* End of Common methods */
</script>
